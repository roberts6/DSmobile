{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useJugadoresList from \"../Hooks/useJugadoresList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar JugadoresCard = function JugadoresCard() {\n  var _useJugadoresList = useJugadoresList(),\n    jugadores = _useJugadoresList.jugadores,\n    isLoading = _useJugadoresList.isLoading,\n    error = _useJugadoresList.error;\n  if (isLoading) {\n    return _jsx(Text, {\n      children: \"Cargando jugadores...\"\n    });\n  }\n  if (error) {\n    return _jsxs(Text, {\n      children: [\"Error al cargar los jugadores: \", error.message]\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      data: jugadores,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {},\n          children: [_jsx(Image, {\n            source: {\n              uri: item.results.thumbnail\n            },\n            style: styles.image\n          }), _jsx(Text, {\n            style: styles.title,\n            children: item.results.name\n          }), _jsxs(Text, {\n            children: [\"ID:\", item.results.username]\n          }), _jsxs(Text, {\n            children: [\"URL:\", item.results.email]\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }), _jsx(Text, {\n      style: {\n        marginTop: 30,\n        color: 'white'\n      },\n      children: \"Ac\\xE1 estoy jugador\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 20\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default JugadoresCard;","map":{"version":3,"names":["React","useState","useEffect","FlatList","Text","Image","TouchableOpacity","StyleSheet","useJugadoresList","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","JugadoresCard","_useJugadoresList","jugadores","isLoading","error","children","message","data","renderItem","_ref","item","onPress","source","uri","results","thumbnail","style","styles","image","title","name","username","email","keyExtractor","id","toString","marginTop","color","create","width","height","borderRadius","marginRight","fontSize","fontWeight"],"sources":["/Users/oscarroberts/Desktop/proyecto_personal/DSmobile/src/views/JugadoresCard.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { FlatList, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport useJugadoresList from '../Hooks/useJugadoresList';\n\nconst JugadoresCard = () => {\n  const { jugadores, isLoading, error } = useJugadoresList();\n\n  if (isLoading) {\n    return (\n      <Text>Cargando jugadores...</Text>\n    );\n  }\n\n  if (error) {\n    return (\n      <Text>Error al cargar los jugadores: {error.message}</Text>\n    );\n  }\n\n  return (\n    <>\n      <FlatList\n        data={jugadores}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => { }}>\n            <Image source={{ uri: item.results.thumbnail }} style={styles.image} />\n            <Text style={styles.title}>{item.results.name}</Text>\n            <Text>ID:{item.results.username}</Text>\n            <Text>URL:{item.results.email}</Text>\n          </TouchableOpacity>\n        )}\n        keyExtractor={item => item.id.toString()}\n      />\n      <Text style={{ marginTop: 30, color: 'white' }}>Ac√° estoy jugador</Text>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 20,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nexport default JugadoresCard;\n\n\n\n\n"],"mappings":"AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,gBAAgB;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,iBAAA,GAAwCR,gBAAgB,CAAC,CAAC;IAAlDS,SAAS,GAAAD,iBAAA,CAATC,SAAS;IAAEC,SAAS,GAAAF,iBAAA,CAATE,SAAS;IAAEC,KAAK,GAAAH,iBAAA,CAALG,KAAK;EAEnC,IAAID,SAAS,EAAE;IACb,OACER,IAAA,CAACN,IAAI;MAAAgB,QAAA,EAAC;IAAqB,CAAM,CAAC;EAEtC;EAEA,IAAID,KAAK,EAAE;IACT,OACEP,KAAA,CAACR,IAAI;MAAAgB,QAAA,GAAC,iCAA+B,EAACD,KAAK,CAACE,OAAO;IAAA,CAAO,CAAC;EAE/D;EAEA,OACET,KAAA,CAAAE,SAAA;IAAAM,QAAA,GACEV,IAAA,CAACP,QAAQ;MACPmB,IAAI,EAAEL,SAAU;MAChBM,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OACjBb,KAAA,CAACN,gBAAgB;UAACoB,OAAO,EAAE,SAAAA,QAAA,EAAM,CAAE,CAAE;UAAAN,QAAA,GACnCV,IAAA,CAACL,KAAK;YAACsB,MAAM,EAAE;cAAEC,GAAG,EAAEH,IAAI,CAACI,OAAO,CAACC;YAAU,CAAE;YAACC,KAAK,EAAEC,MAAM,CAACC;UAAM,CAAE,CAAC,EACvEvB,IAAA,CAACN,IAAI;YAAC2B,KAAK,EAAEC,MAAM,CAACE,KAAM;YAAAd,QAAA,EAAEK,IAAI,CAACI,OAAO,CAACM;UAAI,CAAO,CAAC,EACrDvB,KAAA,CAACR,IAAI;YAAAgB,QAAA,GAAC,KAAG,EAACK,IAAI,CAACI,OAAO,CAACO,QAAQ;UAAA,CAAO,CAAC,EACvCxB,KAAA,CAACR,IAAI;YAAAgB,QAAA,GAAC,MAAI,EAACK,IAAI,CAACI,OAAO,CAACQ,KAAK;UAAA,CAAO,CAAC;QAAA,CACrB,CAAC;MAAA,CACnB;MACFC,YAAY,EAAE,SAAAA,aAAAb,IAAI;QAAA,OAAIA,IAAI,CAACc,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA;IAAC,CAC1C,CAAC,EACF9B,IAAA,CAACN,IAAI;MAAC2B,KAAK,EAAE;QAAEU,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAtB,QAAA,EAAC;IAAiB,CAAM,CAAC;EAAA,CACxE,CAAC;AAEP,CAAC;AAED,IAAMY,MAAM,GAAGzB,UAAU,CAACoC,MAAM,CAAC;EAC/BV,KAAK,EAAE;IACLW,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDb,KAAK,EAAE;IACLc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAelC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}