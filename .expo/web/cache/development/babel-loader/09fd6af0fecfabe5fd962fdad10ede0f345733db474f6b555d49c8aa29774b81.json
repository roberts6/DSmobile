{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useJugadoresList from \"../Hooks/useJugadoresList\";\nimport JugadorDetalle from \"./JugadorDetalle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar JugadoresCard = function JugadoresCard() {\n  var _useJugadoresList = useJugadoresList(),\n    jugadores = _useJugadoresList.jugadores,\n    isLoading = _useJugadoresList.isLoading,\n    error = _useJugadoresList.error;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    jugadorSeleccionado = _useState2[0],\n    setJugadorSeleccionado = _useState2[1];\n  if (isLoading) {\n    return _jsx(Text, {\n      children: \"Cargando jugadores...\"\n    });\n  }\n  if (error) {\n    return _jsxs(Text, {\n      children: [\"Error al cargar los jugadores: \", error.message]\n    });\n  }\n  var handlePress = function handlePress(jugador) {\n    setJugadorSeleccionado(jugador);\n  };\n  return _jsx(_Fragment, {\n    children: jugadorSeleccionado ? _jsx(JugadorDetalle, {\n      jugador: jugadorSeleccionado\n    }) : _jsx(FlatList, {\n      data: jugadores,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          style: styles.card,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.picture.thumbnail\n            },\n            style: styles.image\n          }), _jsx(Text, {\n            style: styles.title,\n            children: `${item.name.title} ${item.name.first} ${item.name.last}`\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"ID: \", item.login.username]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"URL: \", item.email]\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.uuid;\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    marginVertical: 10,\n    marginHorizontal: 15,\n    padding: 10,\n    borderRadius: 25,\n    flex: 1\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 20\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  text: {\n    color: 'black',\n    fontSize: 13\n  }\n});\nexport default JugadoresCard;","map":{"version":3,"names":["React","useState","FlatList","Text","Image","Pressable","StyleSheet","useJugadoresList","JugadorDetalle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","JugadoresCard","_useJugadoresList","jugadores","isLoading","error","_useState","_useState2","_slicedToArray","jugadorSeleccionado","setJugadorSeleccionado","children","message","handlePress","jugador","data","renderItem","_ref","item","TouchableOpacity","onPress","style","styles","card","source","uri","picture","thumbnail","image","title","name","first","last","text","login","username","email","keyExtractor","uuid","create","backgroundColor","marginVertical","marginHorizontal","padding","borderRadius","flex","width","height","marginRight","fontSize","fontWeight","color"],"sources":["/Users/oscarroberts/Desktop/proyecto_personal/DSmobile/src/views/JugadoresCard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { FlatList, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n// import useJugadoresList from '../Hooks/useJugadoresList';\n\n// const JugadoresCard = () => {\n//     const { jugadores, isLoading, error } = useJugadoresList();\n\n//     if (isLoading) {\n//         return (\n//             <Text>Cargando jugadores...</Text>\n//         );\n//     }\n\n//     if (error) {\n//         return (\n//             <Text>Error al cargar los jugadores: {error.message}</Text>\n//         );\n//     }\n\n//     return (\n//         <>\n//             <FlatList\n//                 data={jugadores}\n//                 renderItem={({ item }) => (\n//                     <TouchableOpacity onPress={() => { }} style={styles.card}>\n//                         <Image source={{ uri: item.picture.thumbnail }} style={styles.image} />\n//                         <Text style={styles.title}>{`${item.name.title} ${item.name.first} ${item.name.last}`}</Text>\n//                         <Text style={styles.text}>ID: {item.login.username}</Text>\n//                         <Text style={styles.text}>URL: {item.email}</Text>\n//                     </TouchableOpacity>\n//                 )}\n//                 keyExtractor={(item) => item.uuid}\n//             />\n//         </>\n//     );\n// };\n\n// const styles = StyleSheet.create({\n//     card: {\n//         backgroundColor: 'white',\n//         marginVertical: 10,\n//         marginHorizontal: 15,\n//         padding: 10,\n//         borderRadius: 25,\n//         flex: 1\n//     },\n//     image: {\n//         width: 50,\n//         height: 50,\n//         borderRadius: 25,\n//         marginRight: 20,\n//     },\n//     title: {\n//         fontSize: 18,\n//         fontWeight: 'bold',\n//         color: 'black'\n//     },\n//     text: {\n//         color: 'black',\n//         fontSize: 13,\n//     }\n// });\n\n// export default JugadoresCard;\n\nimport React, { useState } from 'react';\nimport { FlatList, Text, Image, Pressable, StyleSheet } from 'react-native';\nimport useJugadoresList from '../Hooks/useJugadoresList';\nimport JugadorDetalle from './JugadorDetalle';\n\nconst JugadoresCard = () => {\n  const { jugadores, isLoading, error } = useJugadoresList();\n  const [jugadorSeleccionado, setJugadorSeleccionado] = useState(null);\n\n  if (isLoading) {\n    return <Text>Cargando jugadores...</Text>;\n  }\n\n  if (error) {\n    return <Text>Error al cargar los jugadores: {error.message}</Text>;\n  }\n\n  const handlePress = (jugador) => {\n    setJugadorSeleccionado(jugador);\n  };\n\n  return (\n    <>\n      {jugadorSeleccionado ? (\n        <JugadorDetalle jugador={jugadorSeleccionado} />\n      ) : (\n        <FlatList\n          data={jugadores}\n          renderItem={({ item }) => (\n            <TouchableOpacity onPress={() => handlePress(item)} style={styles.card}>\n              <Image source={{ uri: item.picture.thumbnail }} style={styles.image} />\n              <Text style={styles.title}>{`${item.name.title} ${item.name.first} ${item.name.last}`}</Text>\n              <Text style={styles.text}>ID: {item.login.username}</Text>\n              <Text style={styles.text}>URL: {item.email}</Text>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.uuid}\n        />\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n    card: {\n        backgroundColor: 'white',\n        marginVertical: 10,\n        marginHorizontal: 15,\n        padding: 10,\n        borderRadius: 25,\n        flex: 1\n    },\n    image: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        marginRight: 20,\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: 'black'\n    },\n    text: {\n        color: 'black',\n        fontSize: 13,\n    }\n});\n\n\nexport default JugadoresCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}